name: Backend CI

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Repository를 가져옵니다
        uses: actions/checkout@v3

      - name: JDK 17을 설치합니다
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Timezone을 Asia/Seoul로 설정합니다
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Seoul

      - name: Github Actions Secrets에 등록된 정보들을 가져온다
        env:
          EXTERNAL_CONFIG: ${{ secrets.EXTERNAL_CONFIG }}
          LOCAL_DATASOURCE: ${{ secrets.LOCAL_DATASOURCE }}
          PROD_DATASOURCE: ${{ secrets.PROD_DATASOURCE }}
        run: mkdir -p src/main/resources/security &&
             echo $EXTERNAL_CONFIG | base64 --decode > src/main/resources/security/application-external.yml
             echo $LOCAL_DATASOURCE | base64 --decode > src/main/resources/security/application-local-datasource.yml
             echo $PROD_DATASOURCE | base64 --decode > src/main/resources/security/application-prod-datasource.yml

      - name: Gradle 명령 실행을 위한 권한을 부여합니다
        run: chmod +x gradlew

      - name: Gradle build를 수행합니다
        run: ./gradlew build

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

